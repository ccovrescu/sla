security:
    encoders:
        #Symfony\Component\Security\Core\User\User: plaintext
        Tlt\ProfileBundle\Entity\User:
            algorithm:        sha1
            encode_as_base64: false
            iterations:       1

    role_hierarchy:
        ROLE_TICKET_SOLVE: [ROLE_TICKET_INSERT]
        ROLE_TICKET_CLOSE: [ROLE_TICKET_SOLVE]
        ROLE_ALLOWED_TO_EDIT_EQUIPMENTS: [ROLE_USER]
        ROLE_ADMIN: [ROLE_ALLOWED_TO_EDIT_EQUIPMENTS, ROLE_TICKET_INSERT]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        #in_memory:
            #memory:
                #users:
                    #user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    #admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        main:
            entity:
                class: Tlt\ProfileBundle\Entity\User
                property: username

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    ^/
            anonymous: ~
            form_login:
                login_path:  login
                check_path:  login_check
            logout:
                path:   /logout
                target: /
        #secured_area:
            #pattern:    ^/demo/secured/
            #form_login:
                #check_path: _security_check
                #login_path: _demo_login
            #logout:
                #path:   _demo_logout
                #target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/owners/index, roles: ROLE_USER }
        - { path: ^/admin/branches/index, roles: ROLE_USER }
        - { path: ^/admin/locations/index, roles: ROLE_USER }
        - { path: ^/admin/zone-locations/index, roles: ROLE_USER }
        - { path: ^/admin/zone-locations, roles: ROLE_ALLOWED_TO_EDIT_EQUIPMENTS }
        - { path: ^/admin/departments/index, roles: ROLE_USER }
        - { path: ^/admin/services/index, roles: ROLE_USER }
        - { path: ^/admin/properties/index, roles: ROLE_USER }
        - { path: ^/admin/sts/index, roles: ROLE_USER }
        - { path: ^/admin/equipments/index, roles: ROLE_USER }
        - { path: ^/admin/equipments/details, roles: ROLE_USER }
        - { path: ^/admin/equipments, roles: ROLE_ALLOWED_TO_EDIT_EQUIPMENTS }
        - { path: ^/admin/sav/index, roles: ROLE_USER }
        - { path: ^/admin/sav, roles: ROLE_ALLOWED_TO_EDIT_EQUIPMENTS }
        - { path: ^/admin/mappings/index, roles: ROLE_USER }
        - { path: ^/admin/mappings, roles: ROLE_ALLOWED_TO_EDIT_EQUIPMENTS }
        - { path: ^/admin/systems/index, roles: ROLE_USER }
        - { path: ^/admin/index, roles: ROLE_USER }
        - { path: ^/admin/ajax, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/tickets/add, roles: ROLE_TICKET_INSERT }
        - { path: ^/tickets/add3, roles: ROLE_TICKET_INSERT }
        - { path: ^/tickets, roles: ROLE_USER }
        - { path: ^/anexa, roles: ROLE_USER }
        - { path: ^/sla, roles: ROLE_ADMIN }
        - { path: ^/sys, roles: ROLE_ADMIN }
        - { path: ^/user/edit, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_USER }
        # - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
    access_denied_url: /denied